{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dan/github/CMC/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport Dropdowns from \"../components/dropdowns\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\";\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport cmcdata from \"../public/cmcdata_subset.json\";\nimport wqpdata from \"../public/wqp_stations.json\";\n\nvar Home = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Home, _PureComponent);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      filtered_data: [],\n      wqp_station_data: [],\n      show_wqp: true,\n      chart_data: [],\n      GroupNames: null,\n      variables: null,\n      selectedGroupNames: null,\n      selectedVariables: null,\n      selected: {\n        index: null,\n        StationName: null\n      },\n      /// individual row selected\n      startDate: moment().subtract(2, \"year\"),\n      endDate: moment(),\n      availableVariablesAtLocation: null,\n      selectedVariableAtLocation: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Map\", dynamic(function () {\n      return import('../components/map');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak('../components/map')];\n        },\n        modules: ['../components/map']\n      }\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeLocation\", function (e) {\n      console.log(e.index);\n\n      _this.setState({\n        selected: cmcdata.filter(function (item) {\n          return item['index'] == e.index;\n        })[0]\n      }, function () {\n        _this.updateChartData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnique\", function (e, d) {\n      var result = [];\n      var map = new Map();\n\n      var _iterator = _createForOfIteratorHelper(d),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (!map.has(item[e])) {\n            map.set(item[e], true); // set any value to Map\n\n            var obj = {};\n            obj[e] = item[e];\n            result.push(obj);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setGroupName\", function (e) {\n      console.log(e);\n\n      _this.setState({\n        selectedGroupNames: e[0].GroupName\n      }, function () {\n        _this.setFilteredData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setVariable\", function (e) {\n      _this.setState({\n        selectedVariables: e[0].variable\n      }, function () {\n        _this.setFilteredData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDates\", function (startDate, endDate) {\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        _this.setFilteredData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetLocation\", function () {\n      _this.setState({\n        selected: {\n          index: null,\n          StationName: null\n        },\n        chart_data: null,\n        selectedVariableAtLocation: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setVariableAtLocation\", function (e) {\n      console.log(e);\n\n      _this.setState({\n        selectedVariableAtLocation: e[0].variable\n      }, function () {\n        _this.updateChartData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterData\", function () {\n      var new_data = _this.state.selectedGroupNames ? cmcdata.filter(function (item) {\n        return item['GroupName'] == _this.state.selectedGroupNames;\n      }) : cmcdata;\n      var filtered_data = _this.state.selectedVariables ? new_data.filter(function (item) {\n        return item['variable'] == _this.state.selectedVariables;\n      }) : new_data;\n      var final_data = _this.state.startDate ? filtered_data.filter(function (a) {\n        return new Date(a.Date) - _this.state.startDate > 0;\n      }) : filtered_data;\n      var ultimate_data = _this.state.endDate ? final_data.filter(function (a) {\n        return new Date(a.Date) - _this.state.endDate < 0;\n      }) : final_data;\n      return ultimate_data;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setFilteredData\", function () {\n      _this.resetLocation();\n\n      var new_data = _this.filterData();\n\n      _this.setState({\n        filtered_data: new_data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatVals\", function (item, objs) {\n      var a = item.Date;\n      var b = parseFloat(item.value);\n      objs[a] = b;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateChartData\", function () {\n      console.log(_this.state.selected.GroupName);\n      var chart_data_by_group = _this.state.selected.StationName ? cmcdata.filter(function (item) {\n        return item['StationName'] == _this.state.selected.StationName;\n      }) : cmcdata;\n\n      var newVariables = _this.getUnique('variable', chart_data_by_group);\n\n      _this.setState({\n        availableVariablesAtLocation: newVariables\n      }, function () {\n        var new_chart_data = _this.state.selectedVariableAtLocation ? chart_data_by_group.filter(function (item) {\n          return item['variable'] == _this.state.selectedVariableAtLocation;\n        }) : chart_data_by_group.filter(function (item) {\n          return item['variable'] == _this.state.availableVariablesAtLocation[0];\n        });\n        var chart_data = {};\n        new_chart_data.map(function (item) {\n          _this.formatVals(item, chart_data);\n        });\n\n        _this.setState({\n          chart_data: chart_data\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.setState({\n        filtered_data: cmcdata,\n        GroupNames: _this.getUnique('GroupName', cmcdata),\n        variables: _this.getUnique('variable', cmcdata),\n        wqp_station_data: wqpdata\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selected = this.state.selected;\n      console.log(selected);\n      return __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        xs: 10,\n        style: {\n          position: 'fixed'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, __jsx(this.Map, {\n        style: {\n          height: '700px',\n          width: '100%',\n          zIndex: 1\n        },\n        data: this.state.filtered_data,\n        wqpdata: this.state.wqp_station_data,\n        selected: this.state.selected,\n        callBack: this.changeLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      })), __jsx(Col, {\n        style: {\n          zIndex: 1001,\n          position: 'relative',\n          height: '400px',\n          opacity: 1,\n          margin: '10px'\n        },\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, __jsx(Row, {\n        className: \"justify-content-md-center\",\n        style: {\n          border: \"solid 1px #b1b5b5\",\n          backgroundColor: 'white',\n          borderRadius: '25px',\n          padding: '20px',\n          margin: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, __jsx(Col, {\n        style: {\n          width: '500px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }\n      }, \" Filter the stations on the map by group name, parameter, or date collected. \")), __jsx(Row, {\n        style: {\n          padding: '5px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      }, __jsx(Dropdowns, {\n        placeholder: \"Select a local group...\",\n        options: this.state.GroupNames,\n        label: 'GroupName',\n        callBack: this.setGroupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      })), __jsx(Row, {\n        style: {\n          padding: '5px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, __jsx(Dropdowns, {\n        placeholder: \"Select a parameter...\",\n        options: this.state.variables,\n        label: 'variable',\n        callBack: this.setVariable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      })), __jsx(Row, {\n        style: {\n          paddingtop: '10px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, __jsx(DateRangePicker, {\n        startDate: this.state.startDate // momentPropTypes.momentObj or null,\n        ,\n        startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n        ,\n        endDate: this.state.endDate // momentPropTypes.momentObj or null,\n        ,\n        endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n        ,\n        onDatesChange: function onDatesChange(_ref) {\n          var startDate = _ref.startDate,\n              endDate = _ref.endDate;\n          return _this2.setDates(startDate, endDate);\n        } // PropTypes.func.isRequired,\n        ,\n        focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n        ,\n        onFocusChange: function onFocusChange(focusedInput) {\n          return _this2.setState({\n            focusedInput: focusedInput\n          });\n        } // PropTypes.func.isRequired,\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      })))), __jsx(Row, {\n        className: \"justify-content-md-center\",\n        style: {\n          border: \"solid 1px #b1b5b5\",\n          backgroundColor: 'white',\n          borderRadius: '25px',\n          padding: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 18\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, selected.StationName !== null ? __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 27\n        }\n      }, \" Selected station: \", selected.StationName, \" \") : __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }\n      }, \" Click a station on the map and select an available parameter to see data. \"), __jsx(Dropdowns, {\n        placeholder: \"available parameters...\",\n        options: this.state.availableVariablesAtLocation,\n        label: 'variable',\n        callBack: this.setVariableAtLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }), __jsx(Chart, {\n        data: this.state.chart_data,\n        unit: this.state.selected.unit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }))))));\n    }\n  }]);\n\n  return Home;\n}(PureComponent);\n\nexport default Home;","map":{"version":3,"sources":["/home/dan/github/CMC/pages/index.js"],"names":["React","Component","PureComponent","ReactMapGL","Marker","dynamic","Head","Dropdowns","DatePicker","Container","Row","Col","Chart","DateRangePicker","SingleDatePicker","DayPickerRangeController","moment","cmcdata","wqpdata","Home","filtered_data","wqp_station_data","show_wqp","chart_data","GroupNames","variables","selectedGroupNames","selectedVariables","selected","index","StationName","startDate","subtract","endDate","availableVariablesAtLocation","selectedVariableAtLocation","ssr","e","console","log","setState","filter","item","updateChartData","d","result","map","Map","has","set","obj","push","GroupName","setFilteredData","variable","new_data","state","final_data","a","Date","ultimate_data","resetLocation","filterData","objs","b","parseFloat","value","chart_data_by_group","newVariables","getUnique","new_chart_data","formatVals","position","height","width","zIndex","changeLocation","opacity","margin","border","backgroundColor","borderRadius","padding","setGroupName","setVariable","paddingtop","setDates","focusedInput","setVariableAtLocation","unit"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,wBAA5C,QAA4E,aAA5E;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,iBAAP;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;IAGMC,I;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,aAAa,EAAE,EADX;AAEJC,MAAAA,gBAAgB,EAAE,EAFd;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,UAAU,EAAE,EAJR;AAKJC,MAAAA,UAAU,EAAE,IALR;AAMJC,MAAAA,SAAS,EAAE,IANP;AAOJC,MAAAA,kBAAkB,EAAE,IAPhB;AAQJC,MAAAA,iBAAiB,EAAE,IARf;AASJC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,WAAW,EAAE;AAA3B,OATN;AASwC;AAC5CC,MAAAA,SAAS,EAAEf,MAAM,GAAGgB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,CAVP;AAWJC,MAAAA,OAAO,EAAEjB,MAAM,EAXX;AAYJkB,MAAAA,4BAA4B,EAAE,IAZ1B;AAaJC,MAAAA,0BAA0B,EAAE;AAbxB,K;;0DAiBF9B,OAAO,CAAC;AAAA,aAAM,OAAO,mBAAP,CAAN;AAAA,KAAD,EAAoC;AAAC+B,MAAAA,GAAG,EAAE,KAAN;AAAA;AAAA;AAAA,sCAAtB,mBAAsB;AAAA;AAAA,kBAAtB,mBAAsB;AAAA;AAAA,KAApC,C;;qEAEI,UAACC,CAAD,EAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACR,KAAd;;AACA,YAAKW,QAAL,CAAc;AACVZ,QAAAA,QAAQ,EAAGX,OAAO,CAACwB,MAAR,CAAe,UAACC,IAAD;AAAA,iBAASA,IAAI,CAAC,OAAD,CAAJ,IAAiBL,CAAC,CAACR,KAA5B;AAAA,SAAf,EAAkD,CAAlD;AADD,OAAd,EAEG,YAAM;AACL,cAAKc,eAAL;AACH,OAJD;AAKH,K;;gEAGW,UAACN,CAAD,EAAIO,CAAJ,EAAU;AAClB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;AAFkB,iDAGCH,CAHD;AAAA;;AAAA;AAGlB,4DAAsB;AAAA,cAAXF,IAAW;;AAClB,cAAG,CAACI,GAAG,CAACE,GAAJ,CAAQN,IAAI,CAACL,CAAD,CAAZ,CAAJ,EAAqB;AACjBS,YAAAA,GAAG,CAACG,GAAJ,CAAQP,IAAI,CAACL,CAAD,CAAZ,EAAiB,IAAjB,EADiB,CACU;;AAC3B,gBAAIa,GAAG,GAAG,EAAV;AACAA,YAAAA,GAAG,CAACb,CAAD,CAAH,GAASK,IAAI,CAACL,CAAD,CAAb;AACAQ,YAAAA,MAAM,CAACM,IAAP,CAAYD,GAAZ;AACH;AACJ;AAViB;AAAA;AAAA;AAAA;AAAA;;AAWlB,aAAOL,MAAP;AAEH,K;;mEAEc,UAACR,CAAD,EAAO;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,YAAKG,QAAL,CAAc;AACVd,QAAAA,kBAAkB,EAAEW,CAAC,CAAC,CAAD,CAAD,CAAKe;AADf,OAAd,EAEG,YAAM;AACT,cAAKC,eAAL;AACC,OAJD;AAKH,K;;kEAEa,UAAChB,CAAD,EAAO;AACjB,YAAKG,QAAL,CAAc;AACVb,QAAAA,iBAAiB,EAAEU,CAAC,CAAC,CAAD,CAAD,CAAKiB;AADd,OAAd,EAEG,YAAM;AACT,cAAKD,eAAL;AACC,OAJD;AAKH,K;;+DAEW,UAACtB,SAAD,EAAYE,OAAZ,EAAwB;AAChC,YAAKO,QAAL,CAAc;AACVT,QAAAA,SAAS,EAAGA,SADF;AAEVE,QAAAA,OAAO,EAAGA;AAFA,OAAd,EAGG,YAAM;AACT,cAAKoB,eAAL;AACC,OALD;AAMH,K;;oEAEgB,YAAM;AACnB,YAAKb,QAAL,CAAc;AACVZ,QAAAA,QAAQ,EAAE;AAACC,UAAAA,KAAK,EAAE,IAAR;AAAcC,UAAAA,WAAW,EAAE;AAA3B,SADA;AAEVP,QAAAA,UAAU,EAAE,IAFF;AAGVY,QAAAA,0BAA0B,EAAE;AAHlB,OAAd;AAMF,K;;4EAEuB,UAACE,CAAD,EAAO;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,YAAKG,QAAL,CAAc;AACVL,QAAAA,0BAA0B,EAAEE,CAAC,CAAC,CAAD,CAAD,CAAKiB;AADvB,OAAd,EAEG,YAAM;AACT,cAAKX,eAAL;AACC,OAJD;AAKH,K;;iEAGY,YAAM;AACf,UAAMY,QAAQ,GAAI,MAAKC,KAAL,CAAW9B,kBAAZ,GACKT,OAAO,CAACwB,MAAR,CAAe,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC,WAAD,CAAJ,IAAqB,MAAKc,KAAL,CAAW9B,kBAA1C;AAAA,OAAf,CADL,GAEKT,OAFtB;AAGA,UAAMG,aAAa,GAAI,MAAKoC,KAAL,CAAW7B,iBAAZ,GACA4B,QAAQ,CAACd,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC,UAAD,CAAJ,IAAoB,MAAKc,KAAL,CAAW7B,iBAAzC;AAAA,OAAhB,CADA,GAEA4B,QAFtB;AAGA,UAAME,UAAU,GAAI,MAAKD,KAAL,CAAWzB,SAAZ,GACGX,aAAa,CAACqB,MAAd,CAAqB,UAAAiB,CAAC;AAAA,eAAI,IAAIC,IAAJ,CAASD,CAAC,CAACC,IAAX,IAAmB,MAAKH,KAAL,CAAWzB,SAA9B,GAA0C,CAA9C;AAAA,OAAtB,CADH,GAEGX,aAFtB;AAGA,UAAMwC,aAAa,GAAI,MAAKJ,KAAL,CAAWvB,OAAZ,GACAwB,UAAU,CAAChB,MAAX,CAAkB,UAAAiB,CAAC;AAAA,eAAI,IAAIC,IAAJ,CAASD,CAAC,CAACC,IAAX,IAAmB,MAAKH,KAAL,CAAWvB,OAA9B,GAAwC,CAA5C;AAAA,OAAnB,CADA,GAEAwB,UAFtB;AAIA,aAAOG,aAAP;AACH,K;;sEAGiB,YAAM;AACpB,YAAKC,aAAL;;AACA,UAAMN,QAAQ,GAAG,MAAKO,UAAL,EAAjB;;AACA,YAAKtB,QAAL,CAAc;AACNpB,QAAAA,aAAa,EAAGmC;AADV,OAAd;AAGH,K;;iEAGY,UAACb,IAAD,EAAOqB,IAAP,EAAgB;AACzB,UAAML,CAAC,GAAGhB,IAAI,CAACiB,IAAf;AACA,UAAMK,CAAC,GAAGC,UAAU,CAACvB,IAAI,CAACwB,KAAN,CAApB;AACAH,MAAAA,IAAI,CAACL,CAAD,CAAJ,GAAUM,CAAV;AACH,K;;sEAEiB,YAAM;AACpB1B,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKiB,KAAL,CAAW5B,QAAX,CAAoBwB,SAAhC;AAEA,UAAMe,mBAAmB,GAAI,MAAKX,KAAL,CAAW5B,QAAX,CAAoBE,WAArB,GACtBb,OAAO,CAACwB,MAAR,CAAe,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC,aAAD,CAAJ,IAAuB,MAAKc,KAAL,CAAW5B,QAAX,CAAoBE,WAArD;AAAA,OAAf,CADsB,GAEtBb,OAFN;;AAIA,UAAMmD,YAAY,GAAG,MAAKC,SAAL,CAAe,UAAf,EAA2BF,mBAA3B,CAArB;;AAEA,YAAK3B,QAAL,CAAc;AACVN,QAAAA,4BAA4B,EAAEkC;AADpB,OAAd,EAEG,YAAM;AACT,YAAME,cAAc,GAAI,MAAKd,KAAL,CAAWrB,0BAAZ,GACjBgC,mBAAmB,CAAC1B,MAApB,CAA2B,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAAC,UAAD,CAAJ,IAAoB,MAAKc,KAAL,CAAWrB,0BAAzC;AAAA,SAA3B,CADiB,GAEjBgC,mBAAmB,CAAC1B,MAApB,CAA2B,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAAC,UAAD,CAAJ,IAAoB,MAAKc,KAAL,CAAWtB,4BAAX,CAAwC,CAAxC,CAA9B;AAAA,SAA3B,CAFN;AAIA,YAAMX,UAAU,GAAG,EAAnB;AACA+C,QAAAA,cAAc,CAACxB,GAAf,CAAmB,UAACJ,IAAD,EAAU;AAAC,gBAAK6B,UAAL,CAAgB7B,IAAhB,EAAsBnB,UAAtB;AAAkC,SAAhE;;AAEI,cAAKiB,QAAL,CAAc;AACVjB,UAAAA,UAAU,EAAEA;AADF,SAAd;AAIH,OAdD;AAeH,K;;wEAImB,YAAM;AACtB,YAAKiB,QAAL,CAAc;AACVpB,QAAAA,aAAa,EAAEH,OADL;AAEVO,QAAAA,UAAU,EAAE,MAAK6C,SAAL,CAAe,WAAf,EAA4BpD,OAA5B,CAFF;AAGVQ,QAAAA,SAAS,EAAE,MAAK4C,SAAL,CAAe,UAAf,EAA2BpD,OAA3B,CAHD;AAIVI,QAAAA,gBAAgB,EAAGH;AAJT,OAAd;AAMH,K;;;;;;;6BAEQ;AAAA;;AACL,UAAMU,QAAQ,GAAG,KAAK4B,KAAL,CAAW5B,QAA5B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,aACA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,KAAK,EAAI;AAAC4C,UAAAA,QAAQ,EAAE;AAAX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,WAAM,GAAN;AACI,QAAA,KAAK,EAAI;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE,MAA1B;AAAkCC,UAAAA,MAAM,EAAE;AAA1C,SADb;AAEI,QAAA,IAAI,EAAI,KAAKnB,KAAL,CAAWpC,aAFvB;AAGI,QAAA,OAAO,EAAI,KAAKoC,KAAL,CAAWnC,gBAH1B;AAII,QAAA,QAAQ,EAAI,KAAKmC,KAAL,CAAW5B,QAJ3B;AAKI,QAAA,QAAQ,EAAI,KAAKgD,cALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADA,EAUA,MAAC,GAAD;AAAK,QAAA,KAAK,EAAI;AAACD,UAAAA,MAAM,EAAE,IAAT;AAAeH,UAAAA,QAAQ,EAAE,UAAzB;AAAqCC,UAAAA,MAAM,EAAE,OAA7C;AAAsDI,UAAAA,OAAO,EAAE,CAA/D;AAAkEC,UAAAA,MAAM,EAAE;AAA1E,SAAd;AAAiG,QAAA,EAAE,EAAE,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2BAAf;AAA2C,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAG,mBAAX;AAAgCC,UAAAA,eAAe,EAAE,OAAjD;AAA0DC,UAAAA,YAAY,EAAE,MAAxE;AAAgFC,UAAAA,OAAO,EAAE,MAAzF;AAAiGJ,UAAAA,MAAM,EAAE;AAAzG,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,KAAK,EAAI;AAACJ,UAAAA,KAAK,EAAE;AAAR,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADJ,CADJ,EAII,MAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACQ,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAA8B,QAAA,SAAS,EAAC,2BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAW,QAAA,WAAW,EAAE,yBAAxB;AAAmD,QAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWhC,UAAvE;AAAmF,QAAA,KAAK,EAAI,WAA5F;AAAyG,QAAA,QAAQ,EAAE,KAAK2D,YAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAOI,MAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAA8B,QAAA,SAAS,EAAC,2BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAW,QAAA,WAAW,EAAE,uBAAxB;AAAiD,QAAA,OAAO,EAAE,KAAK1B,KAAL,CAAW/B,SAArE;AAAgF,QAAA,KAAK,EAAI,UAAzF;AAAqG,QAAA,QAAQ,EAAE,KAAK2D,WAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,EAUI,MAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAZ;AAAkC,QAAA,SAAS,EAAC,2BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,eAAD;AACM,QAAA,SAAS,EAAE,KAAK7B,KAAL,CAAWzB,SAD5B,CACuC;AADvC;AAEM,QAAA,WAAW,EAAC,2BAFlB,CAE8C;AAF9C;AAGM,QAAA,OAAO,EAAE,KAAKyB,KAAL,CAAWvB,OAH1B,CAGmC;AAHnC;AAIM,QAAA,SAAS,EAAC,yBAJhB,CAI0C;AAJ1C;AAKM,QAAA,aAAa,EAAE;AAAA,cAAGF,SAAH,QAAGA,SAAH;AAAA,cAAcE,OAAd,QAAcA,OAAd;AAAA,iBAA4B,MAAI,CAACqD,QAAL,CAAcvD,SAAd,EAAyBE,OAAzB,CAA5B;AAAA,SALrB,CAKoF;AALpF;AAMM,QAAA,YAAY,EAAE,KAAKuB,KAAL,CAAW+B,YAN/B,CAM6C;AAN7C;AAOM,QAAA,aAAa,EAAE,uBAAAA,YAAY;AAAA,iBAAI,MAAI,CAAC/C,QAAL,CAAc;AAAE+C,YAAAA,YAAY,EAAZA;AAAF,WAAd,CAAJ;AAAA,SAPjC,CAOsE;AAPtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,CADJ,CADJ,EAyBK,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2BAAf;AAA2C,QAAA,KAAK,EAAE;AAAER,UAAAA,MAAM,EAAG,mBAAX;AAAgCC,UAAAA,eAAe,EAAE,OAAjD;AAA0DC,UAAAA,YAAY,EAAE,MAAxE;AAAgFC,UAAAA,OAAO,EAAE;AAAzF,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMtD,QAAQ,CAACE,WAAT,KAAyB,IAAzB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuBF,QAAQ,CAACE,WAAhC,MADA,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAHN,EAKI,MAAC,SAAD;AAAW,QAAA,WAAW,EAAE,yBAAxB;AACI,QAAA,OAAO,EAAE,KAAK0B,KAAL,CAAWtB,4BADxB;AAEI,QAAA,KAAK,EAAI,UAFb;AAGI,QAAA,QAAQ,EAAE,KAAKsD,qBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAUI,MAAC,KAAD;AAAO,QAAA,IAAI,EAAI,KAAKhC,KAAL,CAAWjC,UAA1B;AAAsC,QAAA,IAAI,EAAG,KAAKiC,KAAL,CAAW5B,QAAX,CAAoB6D,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADH,CAzBL,CAVA,CAFJ,CADA;AAwDH;;;;EA3NcvF,a;;AA8NnB,eAAeiB,IAAf","sourcesContent":["import React, { Component , PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic'\nimport Head from 'next/head'\nimport Dropdowns from \"../components/dropdowns\"\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\"\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\n\nimport cmcdata from \"../public/cmcdata_subset.json\"\nimport wqpdata from \"../public/wqp_stations.json\"\n\n\nclass Home extends PureComponent {\n    state = {\n        filtered_data: [],\n        wqp_station_data: [],\n        show_wqp: true,\n        chart_data: [],\n        GroupNames: null,\n        variables: null,\n        selectedGroupNames: null,\n        selectedVariables: null,\n        selected: {index: null, StationName: null}, /// individual row selected\n        startDate: moment().subtract(2, \"year\"),\n        endDate: moment(),\n        availableVariablesAtLocation: null,\n        selectedVariableAtLocation: null\n        };\n\n\n    Map = dynamic(() => import('../components/map'), {ssr: false});\n\n    changeLocation = (e) => {\n        console.log(e.index)\n        this.setState({\n            selected : cmcdata.filter((item)=> item['index'] == e.index)[0]\n        }, () => {\n            this.updateChartData()\n        })\n    }\n\n\n    getUnique = (e, d) => {\n        const result = [];\n        const map = new Map();\n        for (const item of d) {\n            if(!map.has(item[e])){\n                map.set(item[e], true);    // set any value to Map\n                var obj = {};\n                obj[e] = item[e];\n                result.push(obj);\n            }\n        }\n        return result\n\n    }\n\n    setGroupName = (e) => {\n        console.log(e)\n        this.setState({\n            selectedGroupNames: e[0].GroupName\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n    setVariable = (e) => {\n        this.setState({\n            selectedVariables: e[0].variable\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n     setDates = (startDate, endDate) => {\n        this.setState({\n            startDate : startDate,\n            endDate : endDate\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n     resetLocation = () => {\n        this.setState({\n            selected: {index: null, StationName: null},\n            chart_data: null,\n            selectedVariableAtLocation: null\n\n            })\n     }\n\n     setVariableAtLocation = (e) => {\n        console.log(e)\n        this.setState({\n            selectedVariableAtLocation: e[0].variable\n        }, () => {\n        this.updateChartData()\n        })\n    }\n\n\n    filterData = () => {\n        const new_data = (this.state.selectedGroupNames)\n                            ? cmcdata.filter((item) => item['GroupName'] == this.state.selectedGroupNames)\n                            : cmcdata\n        const filtered_data = (this.state.selectedVariables)\n                            ? new_data.filter((item) => item['variable'] == this.state.selectedVariables)\n                            : new_data\n        const final_data = (this.state.startDate)\n                            ? filtered_data.filter(a => new Date(a.Date) - this.state.startDate > 0)\n                            : filtered_data\n        const ultimate_data = (this.state.endDate)\n                            ? final_data.filter(a => new Date(a.Date) - this.state.endDate < 0)\n                            : final_data\n\n        return ultimate_data\n    }\n\n\n    setFilteredData = () => {\n        this.resetLocation()\n        const new_data = this.filterData()\n        this.setState({\n                filtered_data : new_data\n            })\n    }\n\n\n    formatVals = (item, objs) => {\n        const a = item.Date\n        const b = parseFloat(item.value)\n        objs[a] = b\n    }\n\n    updateChartData = () => {\n        console.log(this.state.selected.GroupName)\n\n        const chart_data_by_group = (this.state.selected.StationName)\n            ? cmcdata.filter((item) => item['StationName'] == this.state.selected.StationName)\n            : cmcdata\n\n        const newVariables = this.getUnique('variable', chart_data_by_group)\n\n        this.setState({\n            availableVariablesAtLocation: newVariables\n        }, () => {\n        const new_chart_data = (this.state.selectedVariableAtLocation)\n            ? chart_data_by_group.filter((item) => item['variable'] == this.state.selectedVariableAtLocation)\n            : chart_data_by_group.filter((item) => item['variable'] == this.state.availableVariablesAtLocation[0])\n\n        const chart_data = {}\n        new_chart_data.map((item) => {this.formatVals(item, chart_data)})\n\n            this.setState({\n                chart_data: chart_data,\n        })\n\n        })\n    }\n\n\n\n    componentDidMount = () => {\n        this.setState({\n            filtered_data: cmcdata,\n            GroupNames: this.getUnique('GroupName', cmcdata),\n            variables: this.getUnique('variable', cmcdata),\n            wqp_station_data : wqpdata\n        })\n    }\n\n    render() {\n        const selected = this.state.selected\n        console.log(selected)\n        return (\n        <Container>\n            <Head></Head>\n            <Row>\n            <Col xs={10} style = {{position: 'fixed'}}>\n                    <this.Map\n                        style = {{ height: '700px', width: '100%', zIndex: 1}}\n                        data = {this.state.filtered_data}\n                        wqpdata = {this.state.wqp_station_data}\n                        selected = {this.state.selected}\n                        callBack = {this.changeLocation}\n                    />\n            </Col>\n            <Col style = {{zIndex: 1001, position: 'relative', height: '400px', opacity: 1, margin: '10px'}} xs={4}>\n                <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '20px', margin: '5px'}}>\n                    <Col style = {{width: '500px'}} >\n                        <Row>\n                            <b> Filter the stations on the map by group name, parameter, or date collected. </b>\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns placeholder={\"Select a local group...\"} options={this.state.GroupNames} label = {'GroupName'} callBack={this.setGroupName} />\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns placeholder={\"Select a parameter...\"} options={this.state.variables} label = {'variable'} callBack={this.setVariable} />\n                        </Row>\n                        <Row style={{paddingtop: '10px'}} className=\"justify-content-md-center\">\n                            <DateRangePicker\n                                  startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                                  startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                                  endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                                  endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                                  onDatesChange={({ startDate, endDate }) => this.setDates(startDate, endDate)} // PropTypes.func.isRequired,\n                                  focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                                  onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                            />\n                        </Row>\n                    </Col>\n                </Row>\n                 <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '10px'}}>\n                    <Col>\n                        { selected.StationName !== null\n                        ? <b> Selected station: {selected.StationName} </b>\n                        : <b> Click a station on the map and select an available parameter to see data. </b>\n                        }\n                        <Dropdowns placeholder={\"available parameters...\"}\n                            options={this.state.availableVariablesAtLocation}\n                            label = {'variable'}\n                            callBack={this.setVariableAtLocation}\n                            />\n                        <Chart data = {this.state.chart_data} unit= {this.state.selected.unit} />\n                    </Col>\n                 </Row>\n            </Col>\n         </Row>\n         </Container>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}