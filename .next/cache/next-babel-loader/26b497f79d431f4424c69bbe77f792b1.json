{"ast":null,"code":"var _jsxFileName = \"/home/dan/github/CMC/components/map.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, PureComponent } from 'react';\nimport ReactMapGL, { Popup, Marker } from 'react-map-gl';\nimport CityPin from '../components/pin';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Markers extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: this.props.data\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return data.map(city => __jsx(Marker, {\n      key: city.index,\n      longitude: city.Longitude,\n      latitude: city.Latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(CityPin, {\n      size: this.props.selected === city.index ? 40 : 15,\n      fill: this.props.selected === city.index ? '#397FC4' : '#FF9E01',\n      opacity: this.props.selected === city.index ? 1 : 0.8,\n      onClick: () => this.props.callBack(city),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nclass wqpMarkers extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: this.props.data\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return data.map(city => __jsx(Marker, {\n      key: city.index,\n      longitude: city.Longitude,\n      latitude: city.Latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(CityPin, {\n      size: 15,\n      fill: \"#FF0000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nclass Map extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      viewport: {\n        width: \"100%\",\n        height: \"100%\",\n        latitude: 38.188830663131526,\n        longitude: -77.96888714127523,\n        zoom: 6\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Row, {\n      style: this.props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, __jsx(ReactMapGL, _extends({\n      mapStyle: \"mapbox://styles/mapbox/outdoors-v9\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiZGFuYmVybnN0ZWluIiwiYSI6ImNrNXM4ZGZuYzA1eGUzbnA0eGdveHZuZ2kifQ.7atp6EfK9Hp958HvKcDFKA\",\n      onViewportChange: viewport => this.setState({\n        viewport\n      })\n    }, this.state.viewport, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), __jsx(Markers, {\n      data: this.props.data,\n      selected: this.props.selected.index,\n      callBack: this.props.callBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), __jsx(Markers, {\n      data: this.props.wqpdata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/dan/github/CMC/components/map.js"],"names":["React","Component","PureComponent","ReactMapGL","Popup","Marker","CityPin","Container","Row","Col","Markers","data","props","render","map","city","index","Longitude","Latitude","selected","callBack","wqpMarkers","Map","viewport","width","height","latitude","longitude","zoom","style","setState","state","wqpdata"],"mappings":"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","sourcesContent":["import React, { Component , PureComponent } from 'react';\nimport ReactMapGL, { Popup, Marker } from 'react-map-gl';\nimport CityPin from '../components/pin';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nclass Markers extends PureComponent {\n  state = {\n    data : this.props.data\n    }\n\n\n  render() {\n    const {data} = this.props;\n\n    return data.map(\n      city =>\n        <Marker key = {city.index} longitude={city.Longitude} latitude={city.Latitude} >\n            <CityPin\n                size = { (this.props.selected === city.index) ? 40 : 15}\n                fill= { (this.props.selected === city.index) ? '#397FC4' : '#FF9E01'}\n                opacity= { (this.props.selected === city.index) ? 1 : 0.8}\n                onClick={() => this.props.callBack(city)}\n                />\n        </Marker>\n    )\n  }\n}\n\nclass wqpMarkers extends PureComponent {\n  state = {\n    data : this.props.data\n    }\n\n\n  render() {\n    const {data} = this.props;\n\n    return data.map(\n      city =>\n        <Marker key = {city.index} longitude={city.Longitude} latitude={city.Latitude} >\n            <CityPin\n                size = {15}\n                fill= '#FF0000'\n                />\n        </Marker>\n    )\n  }\n}\n\nclass Map extends PureComponent {\n    state = {\n        viewport: {\n            width: \"100%\",\n            height: \"100%\",\n            latitude: 38.188830663131526,\n            longitude: -77.96888714127523,\n            zoom: 6\n      },\n    };\n\n    render() {\n        return (\n            <Row style={this.props.style}>\n                <ReactMapGL\n                    mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\n                    mapboxApiAccessToken=\"pk.eyJ1IjoiZGFuYmVybnN0ZWluIiwiYSI6ImNrNXM4ZGZuYzA1eGUzbnA0eGdveHZuZ2kifQ.7atp6EfK9Hp958HvKcDFKA\"\n                    onViewportChange={(viewport) => this.setState({viewport})}\n                    {...this.state.viewport}>\n                    <Markers data={this.props.data} selected={this.props.selected.index} callBack={this.props.callBack} />\n                    <Markers data={this.props.wqpdata} />\n\n                </ReactMapGL>\n            </Row>\n        );\n    }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}