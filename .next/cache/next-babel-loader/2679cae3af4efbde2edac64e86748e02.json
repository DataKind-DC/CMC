{"ast":null,"code":"var _jsxFileName = \"/home/dan/github/CMC/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport Dropdowns from \"../components/dropdowns\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\";\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport axios from \"axios\";\nimport cmcdata from \"../public/cmcdata_subset.json\";\nimport wqpdata from \"../public/wqp_stations.json\"; ///\n/// import requests\n/// station_res = requests.get('https://cmc.vims.edu/odata/Stations')\n/// json.loads(station_res.content)\n///\n///\n/// homestats_res = requests.get('https://cmc.vims.edu/odata/GetHomeStats')\n/// json.loads(homestats_res.content)\n///\n///\n/// benthicrichness_res = requests.get('https://cmc.vims.edu/odata/GetBenthicStationRichness')\n/// json.loads(benthicrichness_res.content)\n///\n///\n/// odata_res = requests.get('https://cmc.vims.edu/odata/Groups?$expand=CmcMemberUser,CmcMemberUser2,CmcMemberUser3,ParameterGroups($select=Parameter,LabId,DetectionLimit;$expand=Parameter)&$orderby=Name')\n/// json.loads(odata_res.content)['value']\n///\n\nclass Home extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      filtered_data: [],\n      wqp_station_data: [],\n      stations_data: [],\n      show_wqp: true,\n      chart_data: [],\n      GroupNames: null,\n      variables: null,\n      selectedGroupNames: null,\n      selectedVariables: null,\n      selected: {\n        index: null,\n        StationName: null\n      },\n      /// individual row selected\n      startDate: moment().subtract(2, \"year\"),\n      endDate: moment(),\n      availableVariablesAtLocation: null,\n      selectedVariableAtLocation: null\n    });\n\n    _defineProperty(this, \"MarkerMap\", dynamic(() => import('../components/map'), {\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak('../components/map')],\n        modules: ['../components/map']\n      }\n    }));\n\n    _defineProperty(this, \"changeLocation\", e => {\n      console.log(e.Id);\n      this.setState({\n        selected: this.state.stations_data.filter(item => item.Id == e.Id)[0]\n      }, () => {\n        console.log('new'); ///  this.updateChartData()\n      });\n    });\n\n    _defineProperty(this, \"getUnique\", (e, d) => {\n      const result = [];\n      const map = new Map();\n\n      for (const item of d) {\n        if (!map.has(item[e])) {\n          map.set(item[e], true); // set any value to Map\n\n          var obj = {};\n          obj[e] = item[e];\n          result.push(obj);\n        }\n      }\n\n      return result;\n    });\n\n    _defineProperty(this, \"setGroupName\", e => {\n      console.log(e);\n      this.setState({\n        selectedGroupNames: e[0].GroupName\n      }, () => {\n        this.setFilteredData();\n      });\n    });\n\n    _defineProperty(this, \"setVariable\", e => {\n      this.setState({\n        selectedVariables: e[0].variable\n      }, () => {\n        this.setFilteredData();\n      });\n    });\n\n    _defineProperty(this, \"setDates\", (startDate, endDate) => {\n      this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, () => {\n        this.setFilteredData();\n      });\n    });\n\n    _defineProperty(this, \"resetLocation\", () => {\n      this.setState({\n        selected: {\n          index: null,\n          StationName: null\n        },\n        chart_data: null,\n        selectedVariableAtLocation: null\n      });\n    });\n\n    _defineProperty(this, \"setVariableAtLocation\", e => {\n      console.log(e);\n      this.setState({\n        selectedVariableAtLocation: e[0].variable\n      }, () => {\n        this.updateChartData();\n      });\n    });\n\n    _defineProperty(this, \"filterData\", () => {\n      const new_data = this.state.selectedGroupNames ? cmcdata.filter(item => item['GroupName'] == this.state.selectedGroupNames) : cmcdata;\n      const filtered_data = this.state.selectedVariables ? new_data.filter(item => item['variable'] == this.state.selectedVariables) : new_data;\n      const final_data = this.state.startDate ? filtered_data.filter(a => new Date(a.Date) - this.state.startDate > 0) : filtered_data;\n      const ultimate_data = this.state.endDate ? final_data.filter(a => new Date(a.Date) - this.state.endDate < 0) : final_data;\n      return ultimate_data;\n    });\n\n    _defineProperty(this, \"setFilteredData\", () => {\n      this.resetLocation();\n      const new_data = this.filterData();\n      this.setState({\n        filtered_data: new_data\n      });\n    });\n\n    _defineProperty(this, \"formatVals\", (item, objs) => {\n      const a = item.Date;\n      const b = parseFloat(item.value);\n      objs[a] = b;\n    });\n\n    _defineProperty(this, \"updateChartData\", () => {\n      console.log(this.state.selected.GroupName);\n      const chart_data_by_group = this.state.selected.StationName ? cmcdata.filter(item => item['StationName'] == this.state.selected.StationName) : cmcdata;\n      const newVariables = this.getUnique('variable', chart_data_by_group);\n      this.setState({\n        availableVariablesAtLocation: newVariables\n      }, () => {\n        const new_chart_data = this.state.selectedVariableAtLocation ? chart_data_by_group.filter(item => item['variable'] == this.state.selectedVariableAtLocation) : chart_data_by_group.filter(item => item['variable'] == this.state.availableVariablesAtLocation[0]);\n        const chart_data = {};\n        new_chart_data.map(item => {\n          this.formatVals(item, chart_data);\n        });\n        this.setState({\n          chart_data: chart_data\n        });\n      });\n    });\n\n    _defineProperty(this, \"load_station_data\", () => {\n      axios.get('https://cmc.vims.edu/odata/Stations').then(res => {\n        const data = res.data['value'];\n        this.setState({\n          stations_data: data\n        });\n      });\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.load_station_data();\n      this.setState({\n        filtered_data: cmcdata,\n        ///   stations_data: stations_data,\n        GroupNames: this.getUnique('GroupName', cmcdata),\n        variables: this.getUnique('variable', cmcdata),\n        wqp_station_data: wqpdata\n      });\n    });\n  }\n\n  render() {\n    const selected = this.state.selected;\n    console.log(selected);\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      xs: 10,\n      style: {\n        position: 'fixed'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, __jsx(this.MarkerMap, {\n      style: {\n        height: '700px',\n        width: '100%',\n        zIndex: 1\n      },\n      stations_data: this.state.stations_data\n      /* data = {this.state.filtered_data} */\n      ,\n      wqpdata: this.state.wqp_station_data,\n      show_wqp: this.state.show_wqp,\n      selected: this.state.selected,\n      callBack: this.changeLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    })), __jsx(Col, {\n      style: {\n        zIndex: 1001,\n        position: 'relative',\n        height: '400px',\n        opacity: 1,\n        margin: '10px'\n      },\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        border: \"solid 1px #b1b5b5\",\n        backgroundColor: 'white',\n        borderRadius: '25px',\n        padding: '20px',\n        margin: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      style: {\n        width: '500px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, \" Filter the stations on the map by group name, parameter, or date collected. \")), __jsx(Row, {\n      style: {\n        padding: '5px'\n      },\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, __jsx(Dropdowns, {\n      placeholder: \"Select a local group...\",\n      options: this.state.GroupNames,\n      label: 'GroupName',\n      callBack: this.setGroupName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    })), __jsx(Row, {\n      style: {\n        padding: '5px'\n      },\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, __jsx(Dropdowns, {\n      placeholder: \"Select a parameter...\",\n      options: this.state.variables,\n      label: 'variable',\n      callBack: this.setVariable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    })), __jsx(Row, {\n      style: {\n        paddingtop: '10px'\n      },\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, __jsx(DateRangePicker, {\n      startDate: this.state.startDate,\n      startDateId: \"your_unique_start_date_id\",\n      endDate: this.state.endDate,\n      endDateId: \"your_unique_end_date_id\",\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => this.setDates(startDate, endDate),\n      focusedInput: this.state.focusedInput,\n      onFocusChange: focusedInput => this.setState({\n        focusedInput\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    })))), __jsx(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        border: \"solid 1px #b1b5b5\",\n        backgroundColor: 'white',\n        borderRadius: '25px',\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 18\n      }\n    }, __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, selected.StationName !== null ? __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 27\n      }\n    }, \" Selected station: \", selected.StationName, \" \") : __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 27\n      }\n    }, \" Click a station on the map and select an available parameter to see data. \"), __jsx(Dropdowns, {\n      placeholder: \"available parameters...\",\n      options: this.state.availableVariablesAtLocation,\n      label: 'variable',\n      callBack: this.setVariableAtLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }), __jsx(Chart, {\n      data: this.state.chart_data,\n      unit: this.state.selected.unit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }))))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/dan/github/CMC/pages/index.js"],"names":["React","Component","PureComponent","ReactMapGL","Marker","dynamic","Head","Dropdowns","DatePicker","Container","Row","Col","Chart","DateRangePicker","SingleDatePicker","DayPickerRangeController","moment","axios","cmcdata","wqpdata","Home","filtered_data","wqp_station_data","stations_data","show_wqp","chart_data","GroupNames","variables","selectedGroupNames","selectedVariables","selected","index","StationName","startDate","subtract","endDate","availableVariablesAtLocation","selectedVariableAtLocation","ssr","e","console","log","Id","setState","state","filter","item","d","result","map","Map","has","set","obj","push","GroupName","setFilteredData","variable","updateChartData","new_data","final_data","a","Date","ultimate_data","resetLocation","filterData","objs","b","parseFloat","value","chart_data_by_group","newVariables","getUnique","new_chart_data","formatVals","get","then","res","data","load_station_data","render","position","height","width","zIndex","changeLocation","opacity","margin","border","backgroundColor","borderRadius","padding","setGroupName","setVariable","paddingtop","setDates","focusedInput","setVariableAtLocation","unit"],"mappings":"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","sourcesContent":["import React, { Component , PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic'\nimport Head from 'next/head'\nimport Dropdowns from \"../components/dropdowns\"\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\"\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport axios from \"axios\";\n\nimport cmcdata from \"../public/cmcdata_subset.json\"\nimport wqpdata from \"../public/wqp_stations.json\"\n\n///\n\n/// import requests\n/// station_res = requests.get('https://cmc.vims.edu/odata/Stations')\n/// json.loads(station_res.content)\n///\n///\n/// homestats_res = requests.get('https://cmc.vims.edu/odata/GetHomeStats')\n/// json.loads(homestats_res.content)\n///\n///\n/// benthicrichness_res = requests.get('https://cmc.vims.edu/odata/GetBenthicStationRichness')\n/// json.loads(benthicrichness_res.content)\n///\n///\n/// odata_res = requests.get('https://cmc.vims.edu/odata/Groups?$expand=CmcMemberUser,CmcMemberUser2,CmcMemberUser3,ParameterGroups($select=Parameter,LabId,DetectionLimit;$expand=Parameter)&$orderby=Name')\n/// json.loads(odata_res.content)['value']\n///\n\n\nclass Home extends PureComponent {\n    state = {\n        filtered_data: [],\n        wqp_station_data: [],\n        stations_data: [],\n        show_wqp: true,\n        chart_data: [],\n        GroupNames: null,\n        variables: null,\n        selectedGroupNames: null,\n        selectedVariables: null,\n        selected: {index: null, StationName: null}, /// individual row selected\n        startDate: moment().subtract(2, \"year\"),\n        endDate: moment(),\n        availableVariablesAtLocation: null,\n        selectedVariableAtLocation: null\n        };\n\n\n    MarkerMap = dynamic(() => import('../components/map'), {ssr: false});\n\n    changeLocation = (e) => {\n        console.log(e.Id)\n        this.setState({\n            selected : this.state.stations_data.filter((item)=> item.Id == e.Id)[0]\n        }, () => {\n            console.log('new')\n          ///  this.updateChartData()\n        })\n    }\n\n\n    getUnique = (e, d) => {\n        const result = [];\n        const map = new Map();\n        for (const item of d) {\n            if(!map.has(item[e])){\n                map.set(item[e], true);    // set any value to Map\n                var obj = {};\n                obj[e] = item[e];\n                result.push(obj);\n            }\n        }\n        return result\n\n    }\n\n    setGroupName = (e) => {\n        console.log(e)\n        this.setState({\n            selectedGroupNames: e[0].GroupName\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n    setVariable = (e) => {\n        this.setState({\n            selectedVariables: e[0].variable\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n     setDates = (startDate, endDate) => {\n        this.setState({\n            startDate : startDate,\n            endDate : endDate\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n     resetLocation = () => {\n        this.setState({\n            selected: {index: null, StationName: null},\n            chart_data: null,\n            selectedVariableAtLocation: null\n\n            })\n     }\n\n     setVariableAtLocation = (e) => {\n        console.log(e)\n        this.setState({\n            selectedVariableAtLocation: e[0].variable\n        }, () => {\n        this.updateChartData()\n        })\n    }\n\n\n    filterData = () => {\n        const new_data = (this.state.selectedGroupNames)\n                            ? cmcdata.filter((item) => item['GroupName'] == this.state.selectedGroupNames)\n                            : cmcdata\n        const filtered_data = (this.state.selectedVariables)\n                            ? new_data.filter((item) => item['variable'] == this.state.selectedVariables)\n                            : new_data\n        const final_data = (this.state.startDate)\n                            ? filtered_data.filter(a => new Date(a.Date) - this.state.startDate > 0)\n                            : filtered_data\n        const ultimate_data = (this.state.endDate)\n                            ? final_data.filter(a => new Date(a.Date) - this.state.endDate < 0)\n                            : final_data\n\n        return ultimate_data\n    }\n\n\n    setFilteredData = () => {\n        this.resetLocation()\n        const new_data = this.filterData()\n        this.setState({\n                filtered_data : new_data\n            })\n    }\n\n\n    formatVals = (item, objs) => {\n        const a = item.Date\n        const b = parseFloat(item.value)\n        objs[a] = b\n    }\n\n    updateChartData = () => {\n        console.log(this.state.selected.GroupName)\n\n        const chart_data_by_group = (this.state.selected.StationName)\n            ? cmcdata.filter((item) => item['StationName'] == this.state.selected.StationName)\n            : cmcdata\n\n        const newVariables = this.getUnique('variable', chart_data_by_group)\n\n        this.setState({\n            availableVariablesAtLocation: newVariables\n        }, () => {\n        const new_chart_data = (this.state.selectedVariableAtLocation)\n            ? chart_data_by_group.filter((item) => item['variable'] == this.state.selectedVariableAtLocation)\n            : chart_data_by_group.filter((item) => item['variable'] == this.state.availableVariablesAtLocation[0])\n\n        const chart_data = {}\n        new_chart_data.map((item) => {this.formatVals(item, chart_data)})\n\n            this.setState({\n                chart_data: chart_data,\n        })\n\n        })\n    }\n\n    load_station_data = () => {\n        axios.get('https://cmc.vims.edu/odata/Stations')\n            .then(res => {\n                const data = res.data['value'];\n                this.setState({stations_data: data})\n\n            })\n    }\n\n\n\n    componentDidMount = () => {\n        this.load_station_data();\n\n        this.setState({\n            filtered_data: cmcdata,\n         ///   stations_data: stations_data,\n            GroupNames: this.getUnique('GroupName', cmcdata),\n            variables: this.getUnique('variable', cmcdata),\n            wqp_station_data : wqpdata\n        })\n    }\n\n    render() {\n        const selected = this.state.selected\n        console.log(selected)\n        return (\n        <Container>\n            <Head></Head>\n            <Row>\n            <Col xs={10} style = {{position: 'fixed'}}>\n                    <this.MarkerMap\n                        style = {{ height: '700px', width: '100%', zIndex: 1}}\n                        stations_data={this.state.stations_data}\n                       /* data = {this.state.filtered_data} */\n                        wqpdata = {this.state.wqp_station_data}\n                        show_wqp = {this.state.show_wqp}\n                        selected = {this.state.selected}\n                        callBack = {this.changeLocation}\n                    />\n            </Col>\n            <Col style = {{zIndex: 1001, position: 'relative', height: '400px', opacity: 1, margin: '10px'}} xs={4}>\n                <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '20px', margin: '5px'}}>\n                    <Col style = {{width: '500px'}} >\n                        <Row>\n                            <b> Filter the stations on the map by group name, parameter, or date collected. </b>\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns placeholder={\"Select a local group...\"} options={this.state.GroupNames} label = {'GroupName'} callBack={this.setGroupName} />\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns placeholder={\"Select a parameter...\"} options={this.state.variables} label = {'variable'} callBack={this.setVariable} />\n                        </Row>\n                        <Row style={{paddingtop: '10px'}} className=\"justify-content-md-center\">\n                            <DateRangePicker\n                                  startDate={this.state.startDate}\n                                  startDateId=\"your_unique_start_date_id\"\n                                  endDate={this.state.endDate}\n                                  endDateId=\"your_unique_end_date_id\"\n                                  onDatesChange={({ startDate, endDate }) => this.setDates(startDate, endDate)}\n                                  focusedInput={this.state.focusedInput}\n                                  onFocusChange={focusedInput => this.setState({ focusedInput })}\n                            />\n                        </Row>\n                    </Col>\n                </Row>\n                 <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '10px'}}>\n                    <Col>\n                        { selected.StationName !== null\n                        ? <b> Selected station: {selected.StationName} </b>\n                        : <b> Click a station on the map and select an available parameter to see data. </b>\n                        }\n                        <Dropdowns placeholder={\"available parameters...\"}\n                            options={this.state.availableVariablesAtLocation}\n                            label = {'variable'}\n                            callBack={this.setVariableAtLocation}\n                            />\n                        <Chart data = {this.state.chart_data} unit= {this.state.selected.unit} />\n                    </Col>\n                 </Row>\n            </Col>\n         </Row>\n         </Container>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}