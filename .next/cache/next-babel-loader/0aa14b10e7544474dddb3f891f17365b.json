{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dan/github/CMC/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport Dropdowns from \"../components/dropdowns\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\";\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport axios from \"axios\";\nimport StationSummary from '../components/stationSummaryPanel'; ///import cmcdata from \"../public/cmcdata_subset.json\"\n\nimport wqpdata from \"../public/wqp_stations.json\";\n\nvar Home = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Home, _PureComponent);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      wqp_station_data: [],\n      all_stations_data: [],\n      stations_data: [],\n      station_ids: [],\n      group_names: [],\n      parameter_data: [],\n      show_wqp: true,\n      chart_data: [],\n      GroupNames: null,\n      variables: null,\n      selectedGroupNames: null,\n      selectedVariables: null,\n      selected: [],\n      /// individual row selected\n      startDate: moment().subtract(2, \"year\"),\n      endDate: moment(),\n      availableVariablesAtLocation: null,\n      selectedVariableAtLocation: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"MarkerMap\", dynamic(function () {\n      return import('../components/map');\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak('../components/map')];\n        },\n        modules: ['../components/map']\n      }\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeLocation\", function (e) {\n      console.log(e.Id);\n\n      _this.setState({\n        selected: _this.state.stations_data.filter(function (item) {\n          return item.Id == e.Id;\n        })[0]\n      }, function () {\n        console.log('new');\n\n        _this.get_station_data(); ///  this.updateChartData()\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnique\", function (e, d) {\n      var result = [];\n      var map = new Map();\n\n      var _iterator = _createForOfIteratorHelper(d),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (!map.has(item[e])) {\n            map.set(item[e], true); // set any value to Map\n\n            var obj = {};\n            obj[e] = item[e];\n            result.push(obj);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setGroupName\", function (e) {\n      console.log(e);\n\n      _this.setState({\n        selectedGroupNames: e.length !== 0 ? e[0].variable : null\n      }, function () {\n        _this.update_stations();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setVariable\", function (e) {\n      console.log(e);\n\n      _this.setState({\n        selectedVariables: e.length !== 0 ? e[0].variable : null\n      }, function () {\n        _this.update_stations();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDates\", function (startDate, endDate) {\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        _this.setFilteredData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetLocation\", function () {\n      _this.setState({\n        selected: {\n          index: null,\n          StationName: null\n        },\n        chart_data: null,\n        selectedVariableAtLocation: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setVariableAtLocation\", function (e) {\n      console.log(e);\n\n      _this.setState({\n        selectedVariableAtLocation: e[0].variable\n      }, function () {\n        _this.updateChartData();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatVals\", function (item, objs) {\n      var a = item.Date;\n      var b = parseFloat(item.value);\n      objs[a] = b;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateChartData\", function () {\n      console.log(_this.state.selected.GroupName);\n      var chart_data_by_group = _this.state.selected.StationName ? cmcdata.filter(function (item) {\n        return item['StationName'] == _this.state.selected.StationName;\n      }) : cmcdata;\n\n      var newVariables = _this.getUnique('variable', chart_data_by_group);\n\n      _this.setState({\n        availableVariablesAtLocation: newVariables\n      }, function () {\n        var new_chart_data = _this.state.selectedVariableAtLocation ? chart_data_by_group.filter(function (item) {\n          return item['variable'] == _this.state.selectedVariableAtLocation;\n        }) : chart_data_by_group.filter(function (item) {\n          return item['variable'] == _this.state.availableVariablesAtLocation[0];\n        });\n        var chart_data = {};\n        new_chart_data.map(function (item) {\n          _this.formatVals(item, chart_data);\n        });\n\n        _this.setState({\n          chart_data: chart_data\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"load_station_data\", function () {\n      axios.get('https://cmc.vims.edu/odata/Stations').then(function (res) {\n        var data = res.data['value'];\n\n        _this.setState({\n          all_stations_data: data,\n          stations_data: data\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"load_parameter_data\", function () {\n      axios.get('https://cmc.vims.edu/odata/Groups?$expand=CmcMemberUser,CmcMemberUser2,CmcMemberUser3,ParameterGroups($select=Parameter,LabId,DetectionLimit;$expand=Parameter)&$orderby=Name').then(function (res) {\n        var data = res.data['value']; ///const parameter_data = data.map((item) => {(item.ParameterGroups)})\n\n        var parameter_types = data.map(function (item) {\n          return item.ParameterGroups.map(function (subitem) {\n            return subitem.Parameter.Name;\n          });\n        });\n        var parameter_array = parameter_types.flat();\n        var unique_parameters = parameter_array.filter(function (x, i, a) {\n          return a.indexOf(x) === i;\n        });\n        var unique_parameters_dropdown = unique_parameters.map(function (item) {\n          return {\n            'variable': item\n          };\n        });\n        var group_names = data.map(function (item) {\n          return {\n            'label': item.Name,\n            'variable': item.Code\n          };\n        });\n\n        _this.setState({\n          parameter_data: data,\n          variables: unique_parameters_dropdown,\n          group_names: group_names\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"get_station_data\", function () {\n      var station_id = _this.state.selected.Id;\n      var get_payload = {\n        '?$expand': ['Event($expand=Station,Group),Parameter'],\n        '$filter': [\"Event/StationId eq \".concat(station_id, \" and QaFlagId eq 2\")]\n      };\n      axios.get('https://cmc.vims.edu/odata/PublicSamples', {\n        params: get_payload\n      }).then(function (res) {\n        _this.get_station_data();\n\n        console.log(res.data);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update_stations\", function () {\n      var param_data = _this.state.parameter_data; /// parameters with a certain code for a station\n\n      var subset_param_data = _this.state.selectedVariables && _this.state.selectedVariables != undefined && _this.state.selectedVariables.length < 1 ? param_data.filter(function (item) {\n        return item['ParameterGroups'].some(function (subitem) {\n          return subitem['Parameter']['Name'] == _this.state.selectedVariables;\n        });\n      }) : param_data;\n      var new_data = _this.state.selectedGroupNames && _this.state.selectedGroupNames != undefined && _this.state.selectedGroupNames.length < 1 ? _this.state.all_stations_data.filter(function (item) {\n        return item['Code'].startsWith(_this.state.selectedGroupNames);\n      }) : _this.state.all_stations_data; /// stations supplying data with those parameters (for filtering stations)\n\n      var new_stations_data = subset_param_data.map(function (item) {\n        return item['Id'];\n      });\n      console.log(new_stations_data);\n      var final_data = new_data.filter(function (item) {\n        return new_stations_data.includes(item['Id']);\n      });\n      console.log(final_data);\n\n      _this.setState({\n        stations_data: final_data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.load_station_data();\n\n      _this.load_parameter_data();\n\n      _this.setState({\n        wqp_station_data: wqpdata\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        xs: 10,\n        style: {\n          position: 'fixed'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }, __jsx(this.MarkerMap, {\n        style: {\n          height: '700px',\n          width: '100%',\n          zIndex: 1\n        },\n        stations_data: this.state.stations_data\n        /* data = {this.state.filtered_data} */\n        ,\n        wqpdata: this.state.wqp_station_data,\n        show_wqp: this.state.show_wqp,\n        selected: this.state.selected,\n        callBack: this.changeLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      })), __jsx(Col, {\n        style: {\n          zIndex: 1001,\n          position: 'relative',\n          height: '400px',\n          opacity: 1,\n          margin: '10px'\n        },\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, __jsx(Row, {\n        className: \"justify-content-md-center\",\n        style: {\n          border: \"solid 1px #b1b5b5\",\n          backgroundColor: 'white',\n          borderRadius: '25px',\n          padding: '20px',\n          margin: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, __jsx(Col, {\n        style: {\n          width: '500px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }\n      }, \" Filter the stations on the map by group name, parameter, or date collected. \")), __jsx(Row, {\n        style: {\n          padding: '5px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }\n      }, __jsx(Dropdowns, {\n        placeholder: \"Select a local group...\",\n        options: this.state.group_names,\n        label: 'label',\n        callBack: this.setGroupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }\n      })), __jsx(Row, {\n        style: {\n          padding: '5px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, __jsx(Dropdowns, {\n        placeholder: \"Select a parameter...\",\n        options: this.state.variables,\n        label: 'variable',\n        callBack: this.setVariable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      })), __jsx(Row, {\n        style: {\n          paddingtop: '10px'\n        },\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }, __jsx(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"your_unique_start_date_id\",\n        endDate: this.state.endDate,\n        endDateId: \"your_unique_end_date_id\",\n        onDatesChange: function onDatesChange(_ref) {\n          var startDate = _ref.startDate,\n              endDate = _ref.endDate;\n          return _this2.setDates(startDate, endDate);\n        },\n        focusedInput: this.state.focusedInput,\n        onFocusChange: function onFocusChange(focusedInput) {\n          return _this2.setState({\n            focusedInput: focusedInput\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }\n      })))), __jsx(Row, {\n        className: \"justify-content-md-center\",\n        style: {\n          border: \"solid 1px #b1b5b5\",\n          backgroundColor: 'white',\n          borderRadius: '25px',\n          padding: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 18\n        }\n      }, __jsx(StationSummary, {\n        station: this.state.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 18\n        }\n      })))));\n    }\n  }]);\n\n  return Home;\n}(PureComponent);\n\nexport default Home;","map":{"version":3,"sources":["/home/dan/github/CMC/pages/index.js"],"names":["React","Component","PureComponent","ReactMapGL","Marker","dynamic","Head","Dropdowns","DatePicker","Container","Row","Col","Chart","DateRangePicker","SingleDatePicker","DayPickerRangeController","moment","axios","StationSummary","wqpdata","Home","wqp_station_data","all_stations_data","stations_data","station_ids","group_names","parameter_data","show_wqp","chart_data","GroupNames","variables","selectedGroupNames","selectedVariables","selected","startDate","subtract","endDate","availableVariablesAtLocation","selectedVariableAtLocation","ssr","e","console","log","Id","setState","state","filter","item","get_station_data","d","result","map","Map","has","set","obj","push","length","variable","update_stations","setFilteredData","index","StationName","updateChartData","objs","a","Date","b","parseFloat","value","GroupName","chart_data_by_group","cmcdata","newVariables","getUnique","new_chart_data","formatVals","get","then","res","data","parameter_types","ParameterGroups","subitem","Parameter","Name","parameter_array","flat","unique_parameters","x","i","indexOf","unique_parameters_dropdown","Code","station_id","get_payload","params","param_data","subset_param_data","undefined","some","new_data","startsWith","new_stations_data","final_data","includes","load_station_data","load_parameter_data","position","height","width","zIndex","changeLocation","opacity","margin","border","backgroundColor","borderRadius","padding","setGroupName","setVariable","paddingtop","setDates","focusedInput"],"mappings":"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","sourcesContent":["import React, { Component , PureComponent } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport dynamic from 'next/dynamic'\nimport Head from 'next/head'\nimport Dropdowns from \"../components/dropdowns\"\nimport DatePicker from \"react-datepicker\";\nimport { Container, Row, Col } from 'reactstrap';\nimport Chart from \"../components/dataChart\"\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport axios from \"axios\";\n\nimport StationSummary from '../components/stationSummaryPanel'\n\n///import cmcdata from \"../public/cmcdata_subset.json\"\nimport wqpdata from \"../public/wqp_stations.json\"\n\n\nclass Home extends PureComponent {\n    state = {\n        wqp_station_data: [],\n        all_stations_data: [],\n        stations_data: [],\n        station_ids: [],\n        group_names: [],\n        parameter_data: [],\n        show_wqp: true,\n        chart_data: [],\n        GroupNames: null,\n        variables: null,\n        selectedGroupNames: null,\n        selectedVariables: null,\n        selected: [], /// individual row selected\n        startDate: moment().subtract(2, \"year\"),\n        endDate: moment(),\n        availableVariablesAtLocation: null,\n        selectedVariableAtLocation: null\n        };\n\n\n    MarkerMap = dynamic(() => import('../components/map'), {ssr: false});\n\n    changeLocation = (e) => {\n        console.log(e.Id)\n        this.setState({\n            selected : this.state.stations_data.filter((item)=> item.Id == e.Id)[0]\n        }, () => {\n            console.log('new')\n            this.get_station_data()\n          ///  this.updateChartData()\n        })\n    }\n\n\n    getUnique = (e, d) => {\n        const result = [];\n        const map = new Map();\n        for (const item of d) {\n            if(!map.has(item[e])){\n                map.set(item[e], true);    // set any value to Map\n                var obj = {};\n                obj[e] = item[e];\n                result.push(obj);\n            }\n        }\n        return result\n\n    }\n\n    setGroupName = (e) => {\n        console.log(e)\n\n        this.setState({\n            selectedGroupNames: e.length !== 0 ? e[0].variable : null\n        }, () => {\n        this.update_stations()\n        })\n    }\n\n    setVariable = (e) => {\n        console.log(e)\n        this.setState({\n            selectedVariables: e.length !== 0 ? e[0].variable : null\n        }, () => {\n        this.update_stations()\n        })\n    }\n\n     setDates = (startDate, endDate) => {\n        this.setState({\n            startDate : startDate,\n            endDate : endDate\n        }, () => {\n        this.setFilteredData()\n        })\n    }\n\n     resetLocation = () => {\n        this.setState({\n            selected: {index: null, StationName: null},\n            chart_data: null,\n            selectedVariableAtLocation: null\n            })\n     }\n\n\n     setVariableAtLocation = (e) => {\n        console.log(e)\n        this.setState({\n            selectedVariableAtLocation: e[0].variable\n        }, () => {\n        this.updateChartData()\n        })\n    }\n\n\n    formatVals = (item, objs) => {\n        const a = item.Date\n        const b = parseFloat(item.value)\n        objs[a] = b\n    }\n\n    updateChartData = () => {\n        console.log(this.state.selected.GroupName)\n\n        const chart_data_by_group = (this.state.selected.StationName)\n            ? cmcdata.filter((item) => item['StationName'] == this.state.selected.StationName)\n            : cmcdata\n\n        const newVariables = this.getUnique('variable', chart_data_by_group)\n\n        this.setState({\n            availableVariablesAtLocation: newVariables\n        }, () => {\n        const new_chart_data = (this.state.selectedVariableAtLocation)\n            ? chart_data_by_group.filter((item) => item['variable'] == this.state.selectedVariableAtLocation)\n            : chart_data_by_group.filter((item) => item['variable'] == this.state.availableVariablesAtLocation[0])\n\n        const chart_data = {}\n        new_chart_data.map((item) => {this.formatVals(item, chart_data)})\n\n            this.setState({\n                chart_data: chart_data,\n        })\n\n        })\n    }\n\n    load_station_data = () => {\n        axios.get('https://cmc.vims.edu/odata/Stations')\n            .then(res => {\n                const data = res.data['value'];\n\n                this.setState({\n                    all_stations_data: data,\n                    stations_data: data,\n                })\n\n            })\n    }\n\n    load_parameter_data = () => {\n        axios.get('https://cmc.vims.edu/odata/Groups?$expand=CmcMemberUser,CmcMemberUser2,CmcMemberUser3,ParameterGroups($select=Parameter,LabId,DetectionLimit;$expand=Parameter)&$orderby=Name')\n            .then(res => {\n                const data = res.data['value'];\n               ///const parameter_data = data.map((item) => {(item.ParameterGroups)})\n                const parameter_types = data.map((item) => { return item.ParameterGroups.map((subitem) => subitem.Parameter.Name) })\n                const parameter_array = parameter_types.flat()\n                const unique_parameters = parameter_array.filter((x, i, a) => a.indexOf(x) === i)\n                const unique_parameters_dropdown = unique_parameters.map((item) => { return {'variable' : item}})\n\n                const group_names = data.map((item) => { return {'label' : item.Name, 'variable': item.Code}})\n\n\n                this.setState({\n                    parameter_data: data,\n                    variables: unique_parameters_dropdown,\n                    group_names: group_names\n                })\n\n            })\n    }\n\n\n    get_station_data = () => {\n        const station_id = this.state.selected.Id\n        const get_payload = {\n            '?$expand': ['Event($expand=Station,Group),Parameter'],\n            '$filter': [`Event/StationId eq ${station_id} and QaFlagId eq 2`]\n            }\n\n        axios.get('https://cmc.vims.edu/odata/PublicSamples', {params : get_payload})\n            .then(res => {        this.get_station_data();\n                console.log(res.data)\n            })\n\n\n    }\n\n\n    update_stations = () => {\n        const param_data = this.state.parameter_data;\n\n        /// parameters with a certain code for a station\n        const subset_param_data = (this.state.selectedVariables && this.state.selectedVariables != undefined && this.state.selectedVariables.length < 1 )\n                            ? param_data.filter((item) => item['ParameterGroups'].some((subitem) => subitem['Parameter']['Name'] == this.state.selectedVariables))\n                            : param_data\n\n        const new_data = (this.state.selectedGroupNames && this.state.selectedGroupNames != undefined && this.state.selectedGroupNames.length < 1 )\n                            ? this.state.all_stations_data.filter(item => item['Code'].startsWith(this.state.selectedGroupNames))\n                            : this.state.all_stations_data\n\n        /// stations supplying data with those parameters (for filtering stations)\n        const new_stations_data = subset_param_data.map((item) => { return item['Id'] })\n        console.log(new_stations_data)\n\n        const final_data = new_data.filter((item) => new_stations_data.includes(item['Id']))\n        console.log(final_data)\n\n        this.setState({ stations_data : final_data })\n\n    }\n\n\n    componentDidMount = () => {\n        this.load_station_data();\n        this.load_parameter_data();\n\n        this.setState({\n            wqp_station_data : wqpdata\n        })\n    }\n\n    render() {\n\n        return (\n        <Container>\n            <Head></Head>\n            <Row>\n            <Col xs={10} style = {{position: 'fixed'}}>\n                    <this.MarkerMap\n                        style = {{ height: '700px', width: '100%', zIndex: 1}}\n                        stations_data={this.state.stations_data}\n                       /* data = {this.state.filtered_data} */\n                        wqpdata = {this.state.wqp_station_data}\n                        show_wqp = {this.state.show_wqp}\n                        selected = {this.state.selected}\n                        callBack = {this.changeLocation}\n                    />\n            </Col>\n            <Col style = {{zIndex: 1001, position: 'relative', height: '400px', opacity: 1, margin: '10px'}} xs={4}>\n                <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '20px', margin: '5px'}}>\n                    <Col style = {{width: '500px'}} >\n                        <Row>\n                            <b> Filter the stations on the map by group name, parameter, or date collected. </b>\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns\n                                placeholder={\"Select a local group...\"}\n                                options={this.state.group_names}\n                                label = {'label'}\n                                callBack={this.setGroupName} />\n                        </Row>\n                        <Row style={{padding: '5px'}} className=\"justify-content-md-center\">\n                            <Dropdowns\n                                placeholder={\"Select a parameter...\"}\n                                options={this.state.variables}\n                                label = {'variable'}\n                                callBack={this.setVariable} />\n                        </Row>\n                        <Row style={{paddingtop: '10px'}} className=\"justify-content-md-center\">\n                            <DateRangePicker\n                                  startDate={this.state.startDate}\n                                  startDateId=\"your_unique_start_date_id\"\n                                  endDate={this.state.endDate}\n                                  endDateId=\"your_unique_end_date_id\"\n                                  onDatesChange={({ startDate, endDate }) => this.setDates(startDate, endDate)}\n                                  focusedInput={this.state.focusedInput}\n                                  onFocusChange={focusedInput => this.setState({ focusedInput })}\n                            />\n                        </Row>\n                    </Col>\n                </Row>\n                 <Row className=\"justify-content-md-center\" style={{ border : \"solid 1px #b1b5b5\", backgroundColor: 'white', borderRadius: '25px', padding: '10px'}}>\n                 <StationSummary station = {this.state.selected} />\n                 </Row>\n            </Col>\n         </Row>\n         </Container>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}