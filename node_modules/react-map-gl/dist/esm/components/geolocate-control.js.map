{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["React","createRef","PropTypes","WebMercatorViewport","mapboxgl","BaseControl","Marker","MapState","TransitionManager","isGeolocationSupported","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","noop","propTypes","className","string","style","object","label","positionOptions","fitBoundsOptions","trackUserLocation","bool","showUserLocation","onViewStateChange","func","onViewportChange","onGeolocate","GeolocateControl","supportsGeolocation","markerPosition","console","warn","controlOptions","forEach","prop","props","control","_mapboxGeolocateControl","_watchState","_geolocateButton","_geolocateButtonRef","current","options","setAttribute","_updateMarker","_updateCamera","_setup","eventManager","_context","on","classList","add","remove","_map","map","trigger","position","setState","coords","center","LngLat","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","viewport","_getBounds","fitBounds","zoom","newViewState","mapState","viewState","getViewportProps","type","callback","state","e","preventDefault","then","result","_setupMapboxGeolocateControl","geolocationWatchID","_geolocationWatchID","undefined","window","navigator","geolocation","clearWatch","_renderMarker","_containerRef","_renderButton","_onClickGeolocate"],"mappings":"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","sourcesContent":["// @flow\n\n/* global window */\nimport React, {createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport mapboxgl from '../utils/mapboxgl';\n\nimport BaseControl from './base-control';\nimport Marker from './marker';\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport type {BaseControlProps} from './base-control';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 500\n});\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  onGeolocate: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  style: {},\n  label: 'Geolocate',\n\n  // mapbox geolocate options\n  positionOptions: null,\n  fitBoundsOptions: null,\n  trackUserLocation: false,\n  showUserLocation: true,\n\n  onGeolocate: () => {}\n});\n\nexport type GeolocateControlProps = BaseControlProps & {\n  className: string,\n  style: Object,\n  label: string,\n  positionOptions: any,\n  fitBoundsOptions: any,\n  trackUserLocation: boolean,\n  showUserLocation: boolean,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  onGeolocate?: Function\n};\n\ntype Coordinate = {\n  longitude: number,\n  latitude: number,\n  accuracy: number\n};\ntype Position = {\n  coords: Coordinate\n};\ntype State = {\n  supportsGeolocation: boolean,\n  markerPosition: ?Coordinate\n};\ntype GeolocateControlOptions = {\n  positionOptions?: any,\n  fitBoundsOptions?: any,\n  trackUserLocation?: boolean,\n  showUserLocation?: boolean\n};\n\nexport default class GeolocateControl extends BaseControl<\n  GeolocateControlProps,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    supportsGeolocation: false,\n    markerPosition: null\n  };\n\n  _mapboxGeolocateControl: any = null;\n\n  _geolocateButtonRef: {current: null | HTMLButtonElement} = createRef();\n\n  componentDidMount() {\n    isGeolocationSupported().then(result => {\n      this.setState({supportsGeolocation: result});\n      this._setupMapboxGeolocateControl(result);\n    });\n  }\n\n  componentWillUnmount() {\n    // re-implement MapboxGeolocateControl's _onRemove\n    // clear the geolocation watch if exists\n    if (this._mapboxGeolocateControl) {\n      const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\n      if (geolocationWatchID !== undefined) {\n        window.navigator.geolocation.clearWatch(geolocationWatchID);\n        this._mapboxGeolocateControl._geolocationWatchID = undefined;\n      }\n    }\n  }\n\n  _setupMapboxGeolocateControl = (supportsGeolocation: boolean) => {\n    if (!supportsGeolocation) {\n      /* eslint-disable no-console, no-undef */\n      console.warn(\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\n      );\n      /* eslint-enable no-console, no-undef */\n      return;\n    }\n\n    // For null option, use Mapbox default value\n    const controlOptions: GeolocateControlOptions = {\n      // disable showUserLocation to avoid Mapbox accessing marker before rendering\n      showUserLocation: false\n    };\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation'].forEach(prop => {\n      if (prop in this.props && this.props[prop] !== null) {\n        controlOptions[prop] = this.props[prop];\n      }\n    });\n\n    const control = new mapboxgl.GeolocateControl(controlOptions);\n    this._mapboxGeolocateControl = control;\n\n    // the following re-implement MapboxGeolocateControl's _setupUI\n    // replace mapbox internal prop\n    control._watchState = 'OFF';\n\n    // replace mapbox internal UI elements\n    control._geolocateButton = this._geolocateButtonRef.current;\n    if (control.options.trackUserLocation && control._geolocateButton) {\n      control._geolocateButton.setAttribute('aria-pressed', 'false');\n    }\n\n    // replace mapbox internal methods\n    control._updateMarker = this._updateMarker;\n    control._updateCamera = this._updateCamera;\n\n    control._setup = true;\n\n    // when the camera is changed (and it's not as a result of the Geolocation Control) change\n    // the watch mode to background watch, so that the marker is updated but not the camera.\n    const {eventManager} = this._context;\n    if (control.options.trackUserLocation && eventManager) {\n      eventManager.on('panstart', () => {\n        if (control._watchState === 'ACTIVE_LOCK') {\n          control._watchState = 'BACKGROUND';\n          control._geolocateButton.classList.add('mapboxgl-ctrl-geolocate-background');\n          control._geolocateButton.classList.remove('mapboxgl-ctrl-geolocate-active');\n        }\n      });\n    }\n\n    control.on('geolocate', this.props.onGeolocate);\n  };\n\n  _onClickGeolocate = () => {\n    const control = this._mapboxGeolocateControl;\n    control._map = this._context.map;\n\n    if (this.props.showUserLocation) {\n      control.on('geolocate', this._updateMarker);\n      control.on('trackuserlocationend', this._updateMarker);\n    }\n\n    return this._mapboxGeolocateControl.trigger();\n  };\n\n  _updateMarker = (position: Position) => {\n    if (position) {\n      this.setState({markerPosition: position.coords});\n    }\n  };\n\n  _getBounds = (position: Position) => {\n    const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n    const radius = position.coords.accuracy;\n    const bounds = center.toBounds(radius);\n\n    return [[bounds._ne.lng, bounds._ne.lat], [bounds._sw.lng, bounds._sw.lat]];\n  };\n\n  _updateCamera = (position: Position) => {\n    const {viewport} = this._context;\n\n    const bounds = this._getBounds(position);\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\n\n    const newViewState = Object.assign({}, viewport, {\n      longitude,\n      latitude,\n      zoom\n    });\n    const mapState = new MapState(newViewState);\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  };\n\n  _renderButton = (type: string, label: string, callback: Function) => {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        ref={this._geolocateButtonRef}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      >\n        <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n      </button>\n    );\n  };\n\n  _renderMarker = () => {\n    const {markerPosition} = this.state;\n    const {showUserLocation} = this.props;\n    if (!markerPosition || !showUserLocation) {\n      return null;\n    }\n\n    return (\n      // $FlowFixMe\n      <Marker\n        key=\"location-maker\"\n        className=\"mapboxgl-user-location-dot\"\n        longitude={markerPosition.longitude}\n        latitude={markerPosition.latitude}\n        onContextMenu={e => e.preventDefault()}\n        captureDrag={false}\n        captureDoubleClick={false}\n      />\n    );\n  };\n\n  _render() {\n    if (!this.state.supportsGeolocation) {\n      return null;\n    }\n\n    const {className, style, label} = this.props;\n    return (\n      <div>\n        {this._renderMarker()}\n        <div\n          key=\"geolocate-control\"\n          className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`}\n          ref={this._containerRef}\n          style={style}\n          onContextMenu={e => e.preventDefault()}\n        >\n          {this._renderButton('geolocate', label, this._onClickGeolocate)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"geolocate-control.js"}